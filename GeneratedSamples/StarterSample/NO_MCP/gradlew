#!/usr/bin/env sh

#
# Copyright Â© 2015-2021 the original authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#
# This script is a simplified version of the `gradlew` script from the Gradle project.
# It is intended to be used for code generation purposes only and does not support all the features of the original script.
#

set -e

# Determine the location of the script.
# It is important to note that this script is not robust enough to handle all possible cases, but it should be sufficient for our purposes.
# For example, it does not handle the case where the script is a symlink.
# If you need a more robust solution, please use the original `gradlew` script.
SCRIPT_DIR=$(cd "$(dirname "$0")" && pwd)

# Determine the location of the Gradle wrapper properties file.
# This is used to determine the version of Gradle to use.
# If this file does not exist, we cannot continue.
PROPERTIES_FILE="$SCRIPT_DIR/gradle/wrapper/gradle-wrapper.properties"
if [ ! -f "$PROPERTIES_FILE" ]; then
    echo "Error: $PROPERTIES_FILE not found"
    exit 1
fi

# Determine the version of Gradle to use.
# This is done by parsing the `gradle-wrapper.properties` file.
# If the version cannot be determined, we cannot continue.
DISTRIBUTION_URL=$(grep "distributionUrl" "$PROPERTIES_FILE" | cut -d'=' -f2)
if [ -z "$DISTRIBUTION_URL" ]; then
    echo "Error: Could not determine Gradle distribution URL"
    exit 1
fi

# Determine the location of the Gradle executable.
# This is done by looking for the `gradle` command in the `PATH`.
# If the command is not found, we cannot continue.
if ! command -v gradle >/dev/null 2>&1; then
    echo "Error: gradle command not found"
    exit 1
fi

# Execute the Gradle command.
# This is done by passing all the arguments to the `gradle` command.
# The `gradle` command will then download the correct version of Gradle and execute the build.
exec gradle "$@"

#!/usr/bin/env sh

#
# Copyright 2015 the original author or authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass any JVM options to Gradle separately.
DEFAULT_JVM_OPTS=""

APP_NAME="Gradle"
APP_BASE_NAME=`basename "$0"`

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD="maximum"

# OS specific support (must be 'true' or 'false').
cygwin=false
msys=false
darwin=false
nonstop=false
case "`uname`" in
  CYGWIN* )
    cygwin=true
    ;;
  Darwin* )
    darwin=true
    ;;
  MINGW* )
    msys=true
    ;;
  NONSTOP* )
    nonstop=true
    ;;
esac

# Attempt to set APP_HOME
# Resolve links: $0 may be a link
PRG="$0"
# Need this for relative symlinks.
while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
    else
        PRG=`dirname "$PRG"`"/$link"
    fi
done
SAVED="`pwd`"
cd "`dirname \"$PRG\"`"/" >/dev/null
APP_HOME="`pwd -P`"
cd "$SAVED" >/dev/null

# Add probing for cleanup of old gradle builds
if [ -n "$APP_HOME" ] && [ -d "$APP_HOME/bin" ] && [ -z "${APP_HOME_PROBED}" ]; then
    # warn about old gradle wrapper scripts
    if [ -f "$APP_HOME/gradlew" ]; then
        echo "w: Found an old gradle wrapper script in \`$APP_HOME\`. It will be ignored."
    fi
    # warn about old gradle installations
    if [ -f "$APP_HOME/bin/gradle" ]; then
        echo "w: Found an old gradle installation in \`$APP_HOME\`. It will be ignored."
    fi
fi
APP_HOME_PROBED="true"

# Read user-specific configurations
if [ -f "$HOME/.gradle/gradle.properties" ] ; then
    # shellcheck disable=SC1090
    . "$HOME/.gradle/gradle.properties"
fi

# Read project-specific configurations
if [ -f "$APP_HOME/gradle.properties" ] ; then
    # shellcheck disable=SC1090
    . "$APP_HOME/gradle.properties"
fi

# For Cygwin, ensure paths are in UNIX format before anything is touched
if $cygwin ; then
    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
fi

# Attempt to find java
if [ -z "$JAVA_HOME" ] ; then
    if $darwin ; then
        if [ -x '/usr/libexec/java_home' ] ; then
            JAVA_HOME=`/usr/libexec/java_home`
        elif [ -d "/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home" ]; then
            JAVA_HOME="/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home"
        fi
    else
        JAVA_CMD="`which java`"
        [ -z "$JAVA_CMD" ] || JAVA_HOME="`dirname \"$JAVA_CMD\"`/.."
    fi
    if [ -z "$JAVA_HOME" ] ; then
        echo "Error: JAVA_HOME is not set and no 'java' command could be found in your PATH." 1>&2
        echo "" 1>&2
        echo "Please set the JAVA_HOME variable in your environment to match the" 1>&2
        echo "location of your Java installation." 1>&2
        exit 1
    fi
fi

# Set JAVA_EXE
JAVA_EXE="$JAVA_HOME/bin/java"

# Check for JAVA_EXE
if [ ! -x "$JAVA_EXE" ] ; then
    echo "Error: JAVA_HOME is not defined correctly." 1>&2
    echo "  We cannot execute $JAVA_EXE" 1>&2
    exit 1
fi

# Set JAVACMD
if [ -z "$JAVACMD" ] ; then
    JAVACMD="$JAVA_EXE"
fi

# Increase the maximum number of open files
if [ "$MAX_FD" != "0" ] ; then
    if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
        # Use the maximum available.
        # Try to use the OS limit, if available.
        if [ -n "`ulimit -H -n`" ] ; then
            MAX_FD_LIMIT=`ulimit -H -n`
        else
            MAX_FD_LIMIT=2048
        fi
        ulimit -n $MAX_FD_LIMIT
    else
        ulimit -n $MAX_FD
    fi
fi

# For Cygwin, switch paths to Windows format before running java
if $cygwin ; then
    APP_HOME=`cygpath --path --windows "$APP_HOME"`
    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
    CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
fi

# For MSYS, switch paths to Windows format before running java
if $msys ; then
    APP_HOME=`(exec cmd /c echo "$APP_HOME")`
    JAVA_HOME=`(exec cmd /c echo "$JAVA_HOME")`
    CLASSPATH=`(exec cmd /c echo "$CLASSPATH")`
fi

# Split up the JVM options only if DEFAULT_JVM_OPTS is specified
if [ -n "$DEFAULT_JVM_OPTS" ] ; then
    JAVA_OPTS=($DEFAULT_JVM_OPTS $JAVA_OPTS)
fi

# Escape the arguments
for i in "$@"
do
    case "$i" in
        *\ *)
            i="\"$i\""
            ;;
    esac
    CMD_LINE_ARGS="$CMD_LINE_ARGS $i"
done

# Execute Gradle
exec "$JAVACMD" "${JAVA_OPTS[@]}" -classpath "$APP_HOME/gradle/wrapper/gradle-wrapper.jar" org.gradle.wrapper.GradleWrapperMain $CMD_LINE_ARGS
